<?php

/**
 * Stiletto API
 * PHP version 7.3
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * API for [Stiletto Web](https://github.com/dm94/stiletto-web)
 * The version of the OpenAPI document: 2.9.0
 * Contact: dm94official@hotmail.es
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */
namespace OpenAPIServer\Api;

use Psr\Container\ContainerInterface;
use Psr\Http\Message\ServerRequestInterface;
use Psr\Http\Message\ResponseInterface;
use Slim\Exception\HttpNotImplementedException;

/**
 * AbstractMapsApi Class Doc Comment
 *
 * @package OpenAPIServer\Api
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */
abstract class AbstractMapsApi
{

    /**
     * @var ContainerInterface|null Slim app container instance
     */
    protected $container;

    /**
     * Route Controller constructor receives container
     *
     * @param ContainerInterface|null $container Slim app container instance
     */
    public function __construct(ContainerInterface $container = null)
    {
        $this->container = $container;
    }


    /**
     * POST addMap
     * Summary: To create a new map
     * Notes: To create a map. The map type has to be one defined in the map json If you do not send the user data, a user without user will be created
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function addMap(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $queryParams = $request->getQueryParams();
        $discordid = (key_exists('discordid', $queryParams)) ? $queryParams['discordid'] : null;
        $token = (key_exists('token', $queryParams)) ? $queryParams['token'] : null;
        $mapname = (key_exists('mapname', $queryParams)) ? $queryParams['mapname'] : null;
        $mapdate = (key_exists('mapdate', $queryParams)) ? $queryParams['mapdate'] : null;
        $maptype = (key_exists('maptype', $queryParams)) ? $queryParams['maptype'] : null;
        $message = "How about implementing addMap as a POST method in OpenAPIServer\Api\MapsApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * POST addResourceMap
     * Summary: To create a new resource in the map
     * Notes: Add a resource on the map. You need to be the map owner or have the map password to create a resource.
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function addResourceMap(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $mapId = $args['mapId'];
        $queryParams = $request->getQueryParams();
        $discordid = (key_exists('discordid', $queryParams)) ? $queryParams['discordid'] : null;
        $token = (key_exists('token', $queryParams)) ? $queryParams['token'] : null;
        $resourcetype = (key_exists('resourcetype', $queryParams)) ? $queryParams['resourcetype'] : null;
        $quality = (key_exists('quality', $queryParams)) ? $queryParams['quality'] : null;
        $x = (key_exists('x', $queryParams)) ? $queryParams['x'] : null;
        $y = (key_exists('y', $queryParams)) ? $queryParams['y'] : null;
        $description = (key_exists('description', $queryParams)) ? $queryParams['description'] : null;
        $mappass = (key_exists('mappass', $queryParams)) ? $queryParams['mappass'] : null;
        $message = "How about implementing addResourceMap as a POST method in OpenAPIServer\Api\MapsApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * DELETE deleteMap
     * Summary: Delete map
     * Notes: Delete a map, only the owner of the map can do this.
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function deleteMap(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $mapId = $args['mapId'];
        $message = "How about implementing deleteMap as a DELETE method in OpenAPIServer\Api\MapsApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * DELETE deleteResource
     * Summary: Delete the resource
     * Notes: Delete a resource
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function deleteResource(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $mapId = $args['mapId'];
        $resourceId = $args['resourceId'];
        $queryParams = $request->getQueryParams();
        $token = (key_exists('token', $queryParams)) ? $queryParams['token'] : null;
        $message = "How about implementing deleteResource as a DELETE method in OpenAPIServer\Api\MapsApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * PUT editMap
     * Summary: Edit map
     * Notes: Edit map data
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function editMap(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $mapId = $args['mapId'];
        $queryParams = $request->getQueryParams();
        $mapname = (key_exists('mapname', $queryParams)) ? $queryParams['mapname'] : null;
        $mapdate = (key_exists('mapdate', $queryParams)) ? $queryParams['mapdate'] : null;
        $allowediting = (key_exists('allowediting', $queryParams)) ? $queryParams['allowediting'] : null;
        $mappass = (key_exists('mappass', $queryParams)) ? $queryParams['mappass'] : null;
        $message = "How about implementing editMap as a PUT method in OpenAPIServer\Api\MapsApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * PUT editResource
     * Summary: For edit the resource
     * Notes: Edit the description of a resource or last harvested
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function editResource(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $mapId = $args['mapId'];
        $resourceId = $args['resourceId'];
        $queryParams = $request->getQueryParams();
        $token = (key_exists('token', $queryParams)) ? $queryParams['token'] : null;
        $description = (key_exists('description', $queryParams)) ? $queryParams['description'] : null;
        $harvested = (key_exists('harvested', $queryParams)) ? $queryParams['harvested'] : null;
        $message = "How about implementing editResource as a PUT method in OpenAPIServer\Api\MapsApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET getMap
     * Notes: Returns map information
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function getMap(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $mapId = $args['mapId'];
        $queryParams = $request->getQueryParams();
        $mappass = (key_exists('mappass', $queryParams)) ? $queryParams['mappass'] : null;
        $message = "How about implementing getMap as a GET method in OpenAPIServer\Api\MapsApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET getMaps
     * Summary: Return all maps for that user and his clan
     * Notes: Return your map list and your clan&#39;s maps
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function getMaps(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $message = "How about implementing getMaps as a GET method in OpenAPIServer\Api\MapsApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * GET getResources
     * Summary: Return all resources for that map
     * Notes: Returns all resources on a map
     * Output-Formats: [application/json]
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function getResources(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $mapId = $args['mapId'];
        $queryParams = $request->getQueryParams();
        $token = (key_exists('token', $queryParams)) ? $queryParams['token'] : null;
        $mappass = (key_exists('mappass', $queryParams)) ? $queryParams['mappass'] : null;
        $discordid = (key_exists('discordid', $queryParams)) ? $queryParams['discordid'] : null;
        $message = "How about implementing getResources as a GET method in OpenAPIServer\Api\MapsApi class?";
        throw new HttpNotImplementedException($request, $message);
    }
}
