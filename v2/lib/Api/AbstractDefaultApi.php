<?php

/**
 * Stiletto API
 * PHP version 7.3
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * API for [Stiletto Web](https://github.com/dm94/stiletto-web)
 * The version of the OpenAPI document: 2.9.0
 * Contact: dm94official@hotmail.es
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */
namespace OpenAPIServer\Api;

use Psr\Container\ContainerInterface;
use Psr\Http\Message\ServerRequestInterface;
use Psr\Http\Message\ResponseInterface;
use Slim\Exception\HttpNotImplementedException;

/**
 * AbstractDefaultApi Class Doc Comment
 *
 * @package OpenAPIServer\Api
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */
abstract class AbstractDefaultApi
{

    /**
     * @var ContainerInterface|null Slim app container instance
     */
    protected $container;

    /**
     * Route Controller constructor receives container
     *
     * @param ContainerInterface|null $container Slim app container instance
     */
    public function __construct(ContainerInterface $container = null)
    {
        $this->container = $container;
    }


    /**
     * OPTIONS clans
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function clans(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $message = "How about implementing clans as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS clansclanId
     * Summary: Endpoint to avoid problems with CORS
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function clansclanId(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $clanId = $args['clanId'];
        $message = "How about implementing clansclanId as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS clansclanIddiscordbot
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function clansclanIddiscordbot(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $clanId = $args['clanId'];
        $message = "How about implementing clansclanIddiscordbot as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS clansclanIdmembers
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function clansclanIdmembers(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $clanId = $args['clanId'];
        $message = "How about implementing clansclanIdmembers as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS clansclanIdmembersmemberid
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function clansclanIdmembersmemberid(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $memberid = $args['memberid'];
        $clanId = $args['clanId'];
        $message = "How about implementing clansclanIdmembersmemberid as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS clansclanIdrelationships
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function clansclanIdrelationships(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $clanId = $args['clanId'];
        $message = "How about implementing clansclanIdrelationships as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS clansclanIdrelationshipsid
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function clansclanIdrelationshipsid(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $id = $args['id'];
        $clanId = $args['clanId'];
        $message = "How about implementing clansclanIdrelationshipsid as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS clansclanIdrequestid
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function clansclanIdrequestid(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $id = $args['id'];
        $clanId = $args['clanId'];
        $message = "How about implementing clansclanIdrequestid as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS clansclanIdrequests
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function clansclanIdrequests(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $clanId = $args['clanId'];
        $message = "How about implementing clansclanIdrequests as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS maps
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function maps(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $message = "How about implementing maps as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS mapsmapId
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function mapsmapId(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $mapId = $args['mapId'];
        $message = "How about implementing mapsmapId as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS mapsmapIdresources
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function mapsmapIdresources(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $mapId = $args['mapId'];
        $message = "How about implementing mapsmapIdresources as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS mapsmapIdresourcesresourceId
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function mapsmapIdresourcesresourceId(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $resourceId = $args['resourceId'];
        $mapId = $args['mapId'];
        $message = "How about implementing mapsmapIdresourcesresourceId as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS optionsBotClansDiscordidTech
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function optionsBotClansDiscordidTech(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $discordid = $args['discordid'];
        $message = "How about implementing optionsBotClansDiscordidTech as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    public function optionsbotclansdiscordidmembers(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $discordid = $args['discordid'];
        $message = "How about implementing optionsBotClansDiscordidTech as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    public function optionsbotclansdiscordidrelationships(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $discordid = $args['discordid'];
        $message = "How about implementing optionsBotClansDiscordidTech as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS optionsBotConfig
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function optionsBotConfig(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $message = "How about implementing optionsBotConfig as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS optionsBotConfigDiscordid
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function optionsBotConfigDiscordid(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $discordid = $args['discordid'];
        $message = "How about implementing optionsBotConfigDiscordid as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS optionsBotTrades
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function optionsBotTrades(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $message = "How about implementing optionsBotTrades as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS optionsBotUsers
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function optionsBotUsers(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $discordid = $args['discordid'];
        $message = "How about implementing optionsBotUsers as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS optionsBotWalkers
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function optionsBotWalkers(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $message = "How about implementing optionsBotWalkers as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS optionsBotWalkersWalkerId
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function optionsBotWalkersWalkerId(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $discordid = $args['discordid'];
        $message = "How about implementing optionsBotWalkersWalkerId as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS optionsClansClanIdMembersMemberidPermisions
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function optionsClansClanIdMembersMemberidPermisions(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $clanId = $args['clanId'];
        $memberid = $args['memberid'];
        $message = "How about implementing optionsClansClanIdMembersMemberidPermisions as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS optionsClansClanidTech
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function optionsClansClanidTech(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $clanid = $args['clanid'];
        $message = "How about implementing optionsClansClanidTech as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS optionsClusters
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function optionsClusters(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $message = "How about implementing optionsClusters as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS optionsRecipes
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function optionsRecipes(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $message = "How about implementing optionsRecipes as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS optionsRecipesRecipeToken
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function optionsRecipesRecipeToken(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $recipeToken = $args['recipeToken'];
        $message = "How about implementing optionsRecipesRecipeToken as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS optionsTrades
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function optionsTrades(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $message = "How about implementing optionsTrades as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS optionsTradesTradeId
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function optionsTradesTradeId(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $tradeId = $args['tradeId'];
        $message = "How about implementing optionsTradesTradeId as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS optionsUsersAuth
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function optionsUsersAuth(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $message = "How about implementing optionsUsersAuth as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS optionsUsersDiscordidTech
     * Summary: Endpoint to avoid problems with CORS
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function optionsUsersDiscordidTech(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $discordid = $args['discordid'];
        $message = "How about implementing optionsUsersDiscordidTech as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS optionsWalkers
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function optionsWalkers(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $message = "How about implementing optionsWalkers as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS optionsWalkersAuth
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function optionsWalkersAuth(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $message = "How about implementing optionsWalkersAuth as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS optionsWalkersWalkerId
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function optionsWalkersWalkerId(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $walkerId = $args['walkerId'];
        $message = "How about implementing optionsWalkersWalkerId as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS users
     * Summary: Endpoint to avoid problems with CORS
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function users(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $message = "How about implementing users as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }

    /**
     * OPTIONS usersdiscordid
     * Summary: Endpoint to avoid problems with CORS
     * Notes: Endpoint to avoid problems with CORS
     *
     * @param ServerRequestInterface $request  Request
     * @param ResponseInterface      $response Response
     * @param array|null             $args     Path arguments
     *
     * @return ResponseInterface
     * @throws HttpNotImplementedException to force implementation class to override this method
     */
    public function usersdiscordid(ServerRequestInterface $request, ResponseInterface $response, array $args)
    {
        $discordid = $args['discordid'];
        $message = "How about implementing usersdiscordid as a OPTIONS method in OpenAPIServer\Api\DefaultApi class?";
        throw new HttpNotImplementedException($request, $message);
    }
}
